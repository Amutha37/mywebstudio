{"version":3,"sources":["components/Navbar.js","context/AppReducer.js","context/GlobalState.js","components/MovieControls.js","components/MovieCard.js","components/Watchlist.js","components/Watched.js","components/ResultCard.js","components/Add.js","App.js","index.js"],"names":["Navbar","className","to","AppReducer","state","action","type","watchlist","payload","filter","movie","id","watched","initialState","localStorage","getItem","JSON","parse","GlobalContext","createContext","GlobalProvider","props","useReducer","dispatch","useEffect","setItem","stringify","Provider","value","addMovieToWatchlist","removeMovieFromWatchlist","addMovieToWatched","moveToWatchlist","removeFromWatched","children","MovieControls","useContext","onClick","MovieCard","poster_path","src","alt","title","Watchlist","length","map","Watched","ResultCard","storedMovie","find","any","storedMovieWatched","watchlistDisabled","watchedDisabled","disabled","Add","useState","query","setQuery","movieData","setMovieData","isLoading","setIsLoading","isErrorr","setIsErrorr","fetchData","event","a","axios","get","process","target","result","resultdata","data","results","console","log","placeholder","onChange","e","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1048ce45.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport const Navbar = () => {\n  return (\n    <header>\n      <div className=\"container\">\n        <div className=\"inner-content\">\n          <div className=\"brand\">\n            <Link to=\"/\">Movies</Link>\n          </div>\n          <ul className=\"nav-links\">\n            <li>\n              <Link to=\"/\">WatchList</Link>\n            </li>\n            <li>\n              <Link to=\"/watched\">Watched</Link>\n            </li>\n            <li>\n              <Link to=\"/add\" className=\"btn\">\n                + List\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </header>\n  );\n};\n","// import React from \"react\";\nconst AppReducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_MOVIE_TO_WATCHLIST\":\n      return {\n        ...state,\n        watchlist: [action.payload, ...state.watchlist],\n      };\n    case \"REMOVE_MOVIE_FROM_WATCHLIST\":\n      return {\n        ...state,\n        watchlist: state.watchlist.filter(\n          (movie) => movie.id !== action.payload\n        ),\n      };\n    case \"ADD_MOVIE_TO_WATCHED\":\n      return {\n        ...state,\n        watchlist: state.watchlist.filter(\n          (movie) => movie.id !== action.payload.id\n        ),\n        watched: [action.payload, ...state.watched],\n      };\n    case \"MOVE_TO_WATCHLIST\":\n      return {\n        ...state,\n        watched: state.watched.filter(\n          (movie) => movie.id !== action.payload.id\n        ),\n        watchlist: [action.payload, ...state.watchlist],\n      };\n    case \"REMOVE_FROM_WATCHED\":\n      return {\n        ...state,\n        watched: state.watched.filter((movie) => movie.id !== action.payload),\n      };\n    default:\n      return state;\n  }\n};\nexport default AppReducer;\n","import React, { createContext, useReducer, useEffect } from \"react\";\nimport AppReducer from \"./AppReducer\";\n\n// initial state\nconst initialState = {\n  watchlist: localStorage.getItem(\"watchlist\")\n    ? JSON.parse(localStorage.getItem(\"watchlist\"))\n    : [],\n  watched: localStorage.getItem(\"watched\")\n    ? JSON.parse(localStorage.getItem(\"watched\"))\n    : [],\n};\n\n// create context\nexport const GlobalContext = createContext(initialState);\n\n// provider components\nexport const GlobalProvider = (props) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  useEffect(() => {\n    localStorage.setItem(\"watchlist\", JSON.stringify(state.watchlist));\n    localStorage.setItem(\"watched\", JSON.stringify(state.watched));\n  }, [state]);\n\n  // actions\n  const addMovieToWatchlist = (movie) => {\n    dispatch({ type: \"ADD_MOVIE_TO_WATCHLIST\", payload: movie });\n  };\n\n  const removeMovieFromWatchlist = (id) => {\n    dispatch({ type: \"REMOVE_MOVIE_FROM_WATCHLIST\", payload: id });\n  };\n\n  const addMovieToWatched = (movie) => {\n    dispatch({ type: \"ADD_MOVIE_TO_WATCHED\", payload: movie });\n  };\n  // move movie to watchlist to watch\n  const moveToWatchlist = (movie) => {\n    dispatch({ type: \"MOVE_TO_WATCHLIST\", payload: movie });\n  };\n  // remove movie from watched\n  const removeFromWatched = (id) => {\n    dispatch({ type: \"REMOVE_FROM_WATCHED\", payload: id });\n  };\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        watchlist: state.watchlist,\n        watched: state.watched,\n        addMovieToWatchlist,\n        removeMovieFromWatchlist,\n        addMovieToWatched,\n        moveToWatchlist,\n        removeFromWatched,\n      }}\n    >\n      {props.children}\n    </GlobalContext.Provider>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport const MovieControls = ({ type, movie }) => {\n  const {\n    removeMovieFromWatchlist,\n    addMovieToWatched,\n    moveToWatchlist,\n    removeFromWatched,\n  } = useContext(GlobalContext);\n\n  return (\n    <div className=\"inner-card-controls\">\n      {type === \"watchlist\" && (\n        <>\n          <button className=\"ctrl-btn\" onClick={() => addMovieToWatched(movie)}>\n            <i className=\"fa-fw far fa-eye\"></i>\n          </button>\n\n          <button\n            className=\"ctrl-btn\"\n            onClick={() => removeMovieFromWatchlist(movie.id)}\n          >\n            <i className=\"fa-fw fa fa-times\"></i>\n          </button>\n        </>\n      )}\n\n      {type === \"watched\" && (\n        <>\n          <button className=\"ctrl-btn\" onClick={() => moveToWatchlist(movie)}>\n            <i className=\"fa-fw far fa-eye-slash\"></i>\n          </button>\n\n          <button\n            className=\"ctrl-btn\"\n            onClick={() => removeFromWatched(movie.id)}\n          >\n            <i className=\"fa-fw fa fa-times\"></i>\n          </button>\n        </>\n      )}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { MovieControls } from \"./MovieControls\";\nexport const MovieCard = ({ movie, type }) => {\n  return (\n    <div className=\"movie-card\">\n      <div className=\"overlay\"> </div>\n      {movie.poster_path ? (\n        <img\n          src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`}\n          alt={`${movie.title} poster`}\n        />\n      ) : (\n        // <span>{movie.rating}</span>\n        <div className=\"filler-poster\"></div>\n      )}\n      <MovieControls type={type} movie={movie} />\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\n\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { MovieCard } from \"./MovieCard\";\n\nexport const Watchlist = () => {\n  const { watchlist } = useContext(GlobalContext);\n  return (\n    <div className=\"movie-page\">\n      <div className=\"container\">\n        <div className=\"header\">\n          <h1 className=\"heading\">Plan to watch</h1>\n          <span className=\"count-pill\">\n            {watchlist.length} {watchlist.length === 1 ? \"Movie\" : \"Movies\"}\n          </span>\n        </div>\n        {watchlist.length > 0 ? (\n          <div className=\"movie-grid\">\n            {watchlist.map((movie) => (\n              <MovieCard key={movie.id} movie={movie} type=\"watchlist\" />\n            ))}\n          </div>\n        ) : (\n          <h2 className=\"no-movies\">No movies in your list for now.</h2>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { MovieCard } from \"./MovieCard\";\n\nexport const Watched = () => {\n  const { watched } = useContext(GlobalContext);\n\n  return (\n    <div className=\"movie-page\">\n      <div className=\"container\">\n        <div className=\"header\">\n          <h1 className=\"heading\">Watched Movies</h1>\n          <span className=\"count-pill\">\n            {watched.length} {watched.length === 1 ? \"Movie\" : \"Movies\"}\n          </span>\n        </div>\n        {watched.length > 0 ? (\n          <div className=\"movie-grid\">\n            {watched.map((movie) => (\n              <MovieCard key={movie.id} movie={movie} type=\"watched\" />\n            ))}\n          </div>\n        ) : (\n          <h2 className=\"no-movies\">\n            Hey! You haven't watched any movies yet.Go and watch a movie!\n          </h2>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\n\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport const ResultCard = ({ movie }) => {\n  const { addMovieToWatchlist, addMovieToWatched, watchlist, watched } =\n    useContext(GlobalContext);\n\n  let storedMovie = watchlist.find((any) => any.id === movie.id);\n  let storedMovieWatched = watched.find((any) => any.id === movie.id);\n\n  const watchlistDisabled = storedMovie\n    ? true\n    : storedMovieWatched\n    ? true\n    : false;\n\n  const watchedDisabled = storedMovieWatched ? true : false;\n\n  return (\n    <div className=\"result-card\">\n      <div className=\"poster-wrapper\">\n        {movie.poster_path ? (\n          <img\n            src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`}\n            alt={`${movie.title} Poster`}\n          />\n        ) : (\n          <div className=\"filler-poster\" />\n        )}\n      </div>\n\n      <div className=\"info\">\n        <div className=\"header\">\n          <h3 className=\"title\">{movie.title}</h3>\n        </div>\n\n        <div className=\"controls\">\n          <button\n            className=\"btn\"\n            disabled={watchlistDisabled}\n            onClick={() => addMovieToWatchlist(movie)}\n          >\n            Add to Watchlist\n          </button>\n\n          <button\n            className=\"btn\"\n            disabled={watchedDisabled}\n            onClick={() => addMovieToWatched(movie)}\n          >\n            Add to Watched\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { ResultCard } from \"./ResultCard\";\nimport axios from \"axios\";\n\nexport const Add = () => {\n  const [query, setQuery] = useState(\"\");\n  const [movieData, setMovieData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isErrorr, setIsErrorr] = useState(false);\n\n  const onChange = (e) => {\n    setQuery(e.target.value);\n    setIsErrorr(false);\n    fetchData(e);\n  };\n\n  const fetchData = async (event) => {\n    setIsLoading(true);\n    setIsErrorr(false);\n    try {\n      const result = await axios.get(\n        `https://api.themoviedb.org/3/search/movie?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&page=1&include_adult=false&query=${event.target.value}`\n      );\n\n      const resultdata = result.data.results;\n      setMovieData(resultdata);\n      setIsLoading(false);\n      console.log(movieData);\n\n      return;\n    } catch (error) {\n      setIsErrorr(true);\n      setMovieData([]);\n    }\n    setIsLoading(false);\n  };\n\n  return (\n    <div className=\"add-page\">\n      <div className=\"container\">\n        <div className=\"add-content\">\n          <div className=\"input-wrapper\">\n            <input\n              type=\"text\"\n              placeholder=\"search for a movie\"\n              value={query}\n              onChange={onChange}\n            />\n          </div>\n          {/* checking for error */}\n\n          {isErrorr && <div>Something went wrong ...</div>}\n          {/* loading  */}\n\n          {isLoading ? (\n            <div>Loading ...</div>\n          ) : (\n            <ul className=\"results\">\n              {movieData.map((movie) => (\n                <li key={movie.id}>\n                  <ResultCard movie={movie} />\n                </li>\n              ))}\n            </ul>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import \"./styles.css\";\n\nimport React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Navbar } from \"./components/Navbar\";\nimport { Watchlist } from \"./components/Watchlist\";\nimport { Watched } from \"./components/Watched\";\nimport { Add } from \"./components/Add\";\nimport \"./lib/font-awesome/css/all.min.css\";\nimport { GlobalProvider } from \"./context/GlobalState\";\n\nexport default function App() {\n  return (\n    <GlobalProvider>\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\">\n            <Watchlist />\n          </Route>\n          <Route path=\"/watched\">\n            <Watched />\n          </Route>\n          <Route path=\"/add\">\n            <Add />\n          </Route>\n        </Switch>\n      </Router>\n    </GlobalProvider>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}